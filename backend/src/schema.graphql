type Query {
  lists: [List]!
}

type Mutation {
  listCreate(input: ListCreateInput!): List!
  listUpdate(input: ListUpdateInput!): List!
  listDestroy(id: ID!): Boolean!

  taskCreate(input: TaskCreateInput!): Task
  taskUpdate(input: TaskUpdateInput!): Task!
  taskDestroy(id: ID!): Boolean!
}

type List {
  id: ID!
  order: Int!
  name: String!
  tasks: [Task]!
}

type Task {
  id: ID!
  listID: ID!
  order: Int!
  description: String!
  done: Boolean!
  date: String
}

input ListCreateInput {
  name: String!
  order: Int!
}
input ListUpdateInput {
  id: ID!
  order: Int!
  name: String!
}

input TaskCreateInput {
  listID: ID!
  order: Int! 
  description: String!
  date: String
}
input TaskUpdateInput {
  id: ID!
  listID: ID!
  order: Int! 
  description: String!
  done: Boolean!
  date: String
}
